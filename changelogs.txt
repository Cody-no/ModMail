
* Removed the broadcast forum workflow and its commands in favor of simpler group-tag automation.
* Added `!sendmany`, `!replymany`, and `!closemany` commands for sending, replying, and closing groups of tickets via temporary tags.
* Persisted group tag membership in the database and clean up tags automatically when tickets close.
* Refactored ticket closure into a reusable helper so every close path shares the same logging, transcript, and DM flow.
* Ensured newly created ticket threads are fetched before use so the first DM no longer fails with Unknown Channel errors.
* Reduced the delay on opening DMs by scheduling forum title updates asynchronously and preventing them from blocking ticket creation.
* Fixed the forum title counter so it no longer appends duplicate numbers when Discord slugifies the channel name.
* Added a `!broadcast` command that creates pinned "Send to All" threads, links them to selected tickets, and mirrors every reply across all recipients.
* Restored the dedicated `category_id` config entry so deployments can keep the legacy identifier alongside the new forum channel settings.
* Moved ticket handling to a single forum channel with threads and keep the forum name in sync with the open ticket count.
* Fixed ticket creation to unwrap `ThreadWithMessage` responses so ticket records write correctly on all discord.py versions.
* Updated configuration to use `forum_channel_id` (with legacy support) and refreshed the README/template instructions.
* Archived ticket threads are now treated as closed so a fresh thread is created instead of reopening them, keeping the workflow identical to the old channel-based system.
* Added GPT-4o ticket summary in closed ticket logs.
* Translated incoming messages to English when relayed to moderators.
* Added replyTranslate and areplyTranslate commands for sending translated replies.
* Ensured config, snippet, blacklist, and transcript files use UTF-8 encoding to preserve non-English text without mojibake.
* Added OpenAI dependency for translation and AI summarization features.
* Tokens and API keys now load from a modmail.env file using python-dotenv.
* Corrected OpenAI API calls using AsyncOpenAI client.
* Initialized OpenAI client with httpx.AsyncClient to avoid proxy errors.
* Added closet command for closing tickets with translated reasons.
* Category name now reflects the number of channels as [n/50] and updates on creation or deletion.
* Added language detection before translation to avoid unnecessary English translations.


* Removed unused googletrans import.
* Replaced automatic message translation with a button that translates on demand.
* Translate button view now has no timeout so it remains usable indefinitely.

* Refined translation prompts to remove extra text from responses.
* Translation results are now wrapped with notices to not respond.
* Removed notice text from translation results; notice is used only in prompts.
* Added TRANSLATION_NOTICE constant and inserted it into translation prompts.
* Clarified comments so the translation notice never appears in output.
* Expanded notice comment to emphasize it is excluded from translations.
* Documented `modmail.env` usage in README setup instructions.

* Corrected config key in templates/config.json to `anonymous_tickets` and updated README accordingly.

* Fixed config loading to always use UTF-8 so Japanese text and emoji in modmail responses display correctly.

